{"version":3,"sources":["components/Header.tsx","components/CardItem.tsx","pages/Home.tsx","pages/Cart.tsx","products.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledBadge","withStyles","theme","createStyles","badge","right","top","border","palette","background","paper","padding","Badge","Header","totalCount","totalPrice","className","Container","maxWidth","to","IconButton","aria-label","badgeContent","color","useStyles","makeStyles","root","width","margin","media","height","btn","btnLabel","marginRight","CardItem","productItem","onAddProductToCart","addedProducts","classes","currentProductCount","id","count","Card","CardActionArea","CardMedia","image","img","title","name","CardContent","Typography","gutterBottom","variant","component","price","CardActions","Button","onClick","Home","productsList","map","product","Cart","onCartClear","addedProductsArr","Object","keys","key","item","Avatar","src","alt","products","discountSize","discountPerWeight","App","cartInitialState","useState","cart","setCart","path","exact","state","itemsList","newCount","newPrice","newProductList","priceWithDiscount","addDiscount","values","reduce","sum","length","window","confirm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.eaadb8e9.chunk.js","sourcesContent":["import React, { FC } from \"react\";\r\nimport { Container, IconButton, Badge } from \"@material-ui/core\";\r\nimport { Theme, withStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst StyledBadge = withStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\tbadge: {\r\n\t\t\tright: -3,\r\n\t\t\ttop: 13,\r\n\t\t\tborder: `2px solid ${theme.palette.background.paper}`,\r\n\t\t\tpadding: \"0 4px\"\r\n\t\t}\r\n\t})\r\n)(Badge);\r\n\r\ninterface HeaderProps {\r\n\ttotalCount: number;\r\n\ttotalPrice: number;\r\n}\r\n\r\nexport const Header: FC<HeaderProps> = ({ totalCount, totalPrice }) => {\r\n\treturn (\r\n\t\t<div className='header'>\r\n\t\t\t<Container maxWidth='md'>\r\n\t\t\t\t<div className='header__inner'>\r\n\t\t\t\t\t<Link to='/'>\r\n\t\t\t\t\t\t<div className='logo'>FruitShop</div>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link to='/cart'>\r\n\t\t\t\t\t\t<div className='cart'>\r\n\t\t\t\t\t\t\t<IconButton aria-label='cart'>\r\n\t\t\t\t\t\t\t\t<StyledBadge badgeContent={totalCount} color='secondary'>\r\n\t\t\t\t\t\t\t\t\t<ShoppingCartIcon />\r\n\t\t\t\t\t\t\t\t</StyledBadge>\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t<div className='cart__price'> {totalPrice} $</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { FC } from \"react\";\r\nimport {\r\n\tCard,\r\n\tCardActionArea,\r\n\tCardActions,\r\n\tCardContent,\r\n\tCardMedia,\r\n\tButton,\r\n\tTypography,\r\n\tBadge\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Product } from \"../products\";\r\nimport { ProductInCart } from \"../App\";\r\n\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\twidth: 345,\r\n\t\tmargin: \"15px\"\r\n\t},\r\n\tmedia: {\r\n\t\theight: 200\r\n\t},\r\n\tbtn: {\r\n\t\twidth: \"100%\"\r\n\t},\r\n\tbtnLabel: {\r\n\t\tmarginRight: \"3px\"\r\n\t}\r\n});\r\n\r\ninterface CardItemProps {\r\n\tproductItem: Product;\r\n\tonAddProductToCart: (product: Product) => void;\r\n\taddedProducts: ProductInCart;\r\n}\r\n\r\nexport const CardItem: FC<CardItemProps> = ({ productItem, onAddProductToCart, addedProducts }) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst currentProductCount = addedProducts[productItem.id]\r\n\t\t? addedProducts[productItem.id].count\r\n\t\t: 0;\r\n\r\n\treturn (\r\n\t\t<Card className={classes.root}>\r\n\t\t\t<CardActionArea>\r\n\t\t\t\t<CardMedia className={classes.media} image={productItem.img} title={productItem.name} />\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography gutterBottom variant='h5' component='h2'>\r\n\t\t\t\t\t\t{productItem.name}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant='body2' color='textSecondary' component='p'>\r\n\t\t\t\t\t\t{productItem.price} $ (per kg)\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t</CardActionArea>\r\n\t\t\t<CardActions>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\tclassName={classes.btn}\r\n\t\t\t\t\tonClick={() => onAddProductToCart(productItem)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<span className={classes.btnLabel}>Add to cart</span>\r\n\t\t\t\t\t<Badge color='secondary' badgeContent={currentProductCount}>\r\n\t\t\t\t\t\t<AddCircleOutlineIcon />\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t</Button>\r\n\t\t\t</CardActions>\r\n\t\t</Card>\r\n\t);\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { CardItem } from \"../components\";\r\nimport { Product } from \"../products\";\r\nimport { ProductInCart } from \"../App\";\r\n\r\ninterface HomeProps {\r\n\tproductsList: Array<Product>;\r\n\tonAddProductToCart: (product: Product) => void;\r\n\taddedProducts: ProductInCart;\r\n}\r\n\r\nexport const Home: FC<HomeProps> = ({ productsList, onAddProductToCart, addedProducts }) => {\r\n\treturn (\r\n\t\t<div className='home'>\r\n\t\t\t<Container maxWidth='md'>\r\n\t\t\t\t<div className='home__inner'>\r\n\t\t\t\t\t{productsList.map((product) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<CardItem\r\n\t\t\t\t\t\t\t\tkey={product.id}\r\n\t\t\t\t\t\t\t\tproductItem={product}\r\n\t\t\t\t\t\t\t\tonAddProductToCart={onAddProductToCart}\r\n\t\t\t\t\t\t\t\taddedProducts={addedProducts}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Container } from \"@material-ui/core\";\r\nimport { ICart } from \"../App\";\r\nimport { Avatar } from \"@material-ui/core\";\r\ninterface CartProps {\r\n\taddedProducts: ICart;\r\n\tonCartClear: () => void;\r\n}\r\n\r\nexport const Cart: React.FC<CartProps> = ({ addedProducts, onCartClear }) => {\r\n\tconst addedProductsArr = Object.keys(addedProducts.productsList).map(\r\n\t\t(key) => addedProducts.productsList[key].item\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className='cart'>\r\n\t\t\t<Container maxWidth='md'>\r\n\t\t\t\t{addedProducts.totalPrice === 0 && (\r\n\t\t\t\t\t<div className='cart-empty'>\r\n\t\t\t\t\t\t<h1>Cart is empty..</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<div className='cart__list'>\r\n\t\t\t\t\t{addedProductsArr.map((item) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div key={item.id} className='cart__list-item cart-item'>\r\n\t\t\t\t\t\t\t\t<Avatar src={item.img} alt={item.name} />\r\n\t\t\t\t\t\t\t\t<div className='cart-item__label'>{item.name}</div>\r\n\t\t\t\t\t\t\t\t<div className='cart-item__label'>\r\n\t\t\t\t\t\t\t\t\t{addedProducts.productsList[item.id].count}kg\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='cart-item__label'>\r\n\t\t\t\t\t\t\t\t\t{addedProducts.productsList[item.id].price}$\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='cart__actions'>\r\n\t\t\t\t\t<Link to='/'>\r\n\t\t\t\t\t\t<Button variant='contained' color='primary'>\r\n\t\t\t\t\t\t\tReturn to products list\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t{addedProducts.totalPrice !== 0 && (\r\n\t\t\t\t\t\t<Button color='primary' onClick={onCartClear}>\r\n\t\t\t\t\t\t\tClear cart\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t);\r\n};\r\n","export type Product = {\r\n\tid: number;\r\n\tname: string;\r\n\tprice: number;\r\n\timg: string;\r\n\tdiscountSize: number;\r\n\tdiscountPerWeight: number;\r\n};\r\n\r\nexport const products: Array<Product> = [\r\n\t{\r\n\t\tid: 1,\r\n\t\tname: \"Banana\",\r\n\t\tprice: 10,\r\n\t\timg: \"https://www.gastronom.ru/binfiles/images/20151029/bddcbbce.jpg\",\r\n\t\tdiscountSize: 0,\r\n\t\tdiscountPerWeight: 0\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\tname: \"Apple\",\r\n\t\tprice: 8,\r\n\t\timg: \"https://m.dom-eda.com/uploads/images/catalog/item/86df51de21/c25c94fe96_1000.jpg\",\r\n\t\tdiscountSize: 0,\r\n\t\tdiscountPerWeight: 0\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\tname: \"Papaya\",\r\n\t\tprice: 10,\r\n\t\timg: \"https://www.fructo.com.ua/image/cache/catalog/fruct/papaya-1400x1400.png\",\r\n\t\tdiscountSize: 5,\r\n\t\tdiscountPerWeight: 3\r\n\t}\r\n];\r\n","import React, { useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Header } from \"./components\";\nimport { Cart, Home } from \"./pages\";\nimport { Product, products } from \"./products\";\n\nimport \"./App.scss\";\n\nexport type ProductInCart = {\n\t[key: string]: {\n\t\titem: Product;\n\t\tprice: number;\n\t\tcount: number;\n\t};\n};\n\nexport interface ICart {\n\tproductsList: ProductInCart;\n\ttotalPrice: number;\n\ttotalCount: number;\n}\n\nfunction App() {\n\tconst cartInitialState = {\n\t\tproductsList: {},\n\t\ttotalPrice: 0,\n\t\ttotalCount: 0\n\t};\n\n\tconst [cart, setCart] = useState<ICart>(cartInitialState);\n\n\tconst addProductToCartHandler = (product: Product) => {\n\t\tsetCart((state) => {\n\t\t\tconst getTotalPrice = (itemsList: ProductInCart): number => {\n\t\t\t\treturn Object.values(itemsList).reduce((sum: number, item) => sum + item.price, 0);\n\t\t\t};\n\n\t\t\tlet newCount = state.productsList[product.id]\n\t\t\t\t? state.productsList[product.id].count + 1\n\t\t\t\t: 1;\n\n\t\t\tlet newPrice = state.productsList[product.id]\n\t\t\t\t? state.productsList[product.id].price + product.price\n\t\t\t\t: product.price;\n\n\t\t\tconst addDiscount = (price: number): number => {\n\t\t\t\tlet priceWithDiscount: number = price;\n\t\t\t\tif (product.discountPerWeight && newCount % product.discountPerWeight === 0) {\n\t\t\t\t\tpriceWithDiscount = price - product.discountSize;\n\t\t\t\t}\n\t\t\t\treturn priceWithDiscount;\n\t\t\t};\n\n\t\t\tconst newProductList: ProductInCart = {\n\t\t\t\t...state.productsList,\n\t\t\t\t[product.id]: {\n\t\t\t\t\titem: product,\n\t\t\t\t\tcount: newCount,\n\t\t\t\t\tprice: addDiscount(newPrice)\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tproductsList: newProductList,\n\t\t\t\ttotalPrice: getTotalPrice(newProductList),\n\t\t\t\ttotalCount: Object.values(newProductList).length\n\t\t\t};\n\t\t});\n\t};\n\n\tconst clearCartHandler = () => {\n\t\tif (window.confirm(\"Are you sure?\")) {\n\t\t\tsetCart(cartInitialState);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Header totalCount={cart.totalCount} totalPrice={cart.totalPrice} />\n\t\t\t<Switch>\n\t\t\t\t<Route path='/' exact>\n\t\t\t\t\t<Home\n\t\t\t\t\t\tproductsList={products}\n\t\t\t\t\t\tonAddProductToCart={addProductToCartHandler}\n\t\t\t\t\t\taddedProducts={cart.productsList}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\t\t\t\t<Route path='/cart'>\n\t\t\t\t\t<Cart addedProducts={cart} onCartClear={clearCartHandler} />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Router basename='/'>\n\t\t\t<App />\n\t\t</Router>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}